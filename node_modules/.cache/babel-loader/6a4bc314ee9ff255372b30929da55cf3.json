{"remainingRequest":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js!D:\\0毕设相关\\EAvLMS\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\0毕设相关\\EAvLMS\\src\\router\\index.js","dependencies":[{"path":"D:\\0毕设相关\\EAvLMS\\src\\router\\index.js","mtime":1589901318568},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\0\\u6BD5\\u8BBE\\u76F8\\u5173\\\\EAvLMS\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"D:\\\\0\\u6BD5\\u8BBE\\u76F8\\u5173\\\\EAvLMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\n//静态路由\nvar constantRoutes = [{\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true,\n  meta: {\n    roles: [0, 1, 2]\n  }\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/404'));\n    });\n  },\n  hidden: true,\n  meta: {\n    roles: [0, 1, 2]\n  }\n}, {\n  path: '/',\n  component: _layout.default,\n  redirect: '/dashboard',\n  meta: {\n    roles: [0, 1, 2]\n  },\n  children: [{\n    path: 'dashboard',\n    name: 'Dashboard',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dashboard/index'));\n      });\n    },\n    meta: {\n      title: '今日感知',\n      icon: 'dashboard',\n      roles: [0, 1, 2]\n    }\n  }, {\n    path: 'notice',\n    name: 'Notice',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/notice/index'));\n      });\n    },\n    meta: {\n      title: '消息',\n      icon: 'dashboard',\n      roles: [0, 1, 2]\n    },\n    hidden: true\n  }]\n}, {\n  path: '/example',\n  component: _layout.default,\n  redirect: '/example/table',\n  name: 'Example',\n  meta: {\n    title: '基本漏洞信息库',\n    icon: 'example',\n    roles: [0, 1, 2]\n  },\n  children: [{\n    path: 'table',\n    name: 'Table',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/table/index'));\n      });\n    },\n    meta: {\n      title: 'CVE',\n      icon: 'table',\n      roles: [0, 1, 2]\n    }\n  }, {\n    path: 'tree',\n    name: 'Tree',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/tree/index'));\n      });\n    },\n    meta: {\n      title: '  资产漏洞',\n      icon: 'tree',\n      roles: [0, 1, 2]\n    }\n  }]\n}, {\n  path: '/form',\n  component: _layout.default,\n  children: [{\n    path: 'index',\n    name: 'Form',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/form/index'));\n      });\n    },\n    meta: {\n      title: '新增漏洞上报',\n      icon: 'form',\n      roles: [0, 2]\n    }\n  }]\n}, {\n  path: '/nested',\n  component: _layout.default,\n  redirect: '/nested/menu1',\n  name: 'Nested',\n  meta: {\n    title: '已有漏洞生命周期管理',\n    icon: 'nested',\n    roles: [0, 1, 2]\n  },\n  // 子菜单\n  children: [{\n    path: 'enterpriseManager',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/nested/enterpriseManager/index'));\n      });\n    },\n    // Parent router-view\n    name: 'enterpriseManager',\n    meta: {\n      title: '企业安全管理人员',\n      roles: [0]\n    },\n    children: [{\n      path: 'toCoder',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/enterpriseManager/toCoder/index'));\n        });\n      },\n      name: 'toCoder',\n      meta: {\n        title: '需下发漏洞'\n      }\n    }, {\n      path: 'toSecurityPerson',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/enterpriseManager/toSecurityPerson/index'));\n        });\n      },\n      name: 'ToSecurityPerson',\n      meta: {\n        title: '需复测漏洞'\n      }\n    }, {\n      path: 'done',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/enterpriseManager/done/index'));\n        });\n      },\n      name: 'Done',\n      meta: {\n        title: '已修复漏洞'\n      }\n    }, {\n      path: 'assets',\n      name: 'Assets',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/assets/index'));\n        });\n      },\n      meta: {\n        title: '资产管理',\n        icon: 'dashboard',\n        roles: [0]\n      }\n    }, {\n      path: 'user',\n      name: 'User',\n      meta: {\n        title: '用户管理',\n        icon: 'dashboard',\n        roles: [0]\n      },\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/user/index'));\n        });\n      }\n    }]\n  }, {\n    path: 'coder',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/nested/coder/index'));\n      });\n    },\n    // Parent router-view\n    name: 'coder',\n    meta: {\n      title: '系统软件开发人员',\n      roles: [0, 1]\n    },\n    children: [{\n      path: 'vulnsFix',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/coder/vulnsFix/index'));\n        });\n      },\n      name: 'ToFix',\n      meta: {\n        title: '需修复漏洞'\n      }\n    }, {\n      path: 'retestResult',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/coder/retestResult/index'));\n        });\n      },\n      name: 'RetestResult',\n      meta: {\n        title: '漏洞复测结果'\n      }\n    }]\n  }, {\n    path: 'securityPerson',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/nested/securityPerson/index'));\n      });\n    },\n    meta: {\n      title: '信息安全技术厂商人员',\n      roles: [0, 2]\n    },\n    children: [{\n      path: 'retest',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/securityPerson/retest/index'));\n        });\n      },\n      name: 'Retest',\n      meta: {\n        title: '需复测漏洞'\n      }\n    }, {\n      path: 'retestResult',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/nested/securityPerson/retestResult/index'));\n        });\n      },\n      name: 'RetestResult',\n      meta: {\n        title: '漏洞复测结果'\n      }\n    }]\n  }]\n}];\nexports.constantRoutes = constantRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}