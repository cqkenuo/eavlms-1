{"remainingRequest":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js!D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0毕设相关\\EAvLMS\\src\\views\\tree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\0毕设相关\\EAvLMS\\src\\views\\tree\\index.vue","mtime":1590759458746},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:\\\\0\\u6BD5\\u8BBE\\u76F8\\u5173\\\\EAvLMS\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:\\\\0\\u6BD5\\u8BBE\\u76F8\\u5173\\\\EAvLMS\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nvar _export2excel = require(\"@/utils/export2excel\");\n\nvar _vulnsInfo = require(\"@/utils/vulns-info\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//导入抽离的漏洞状态转化\nvar _default = {\n  filters: {\n    vulnsState: _vulnsInfo.vulnsState,\n    vulnsRand: _vulnsInfo.vulnsRand,\n    vulnsStateText: _vulnsInfo.vulnsStateText\n  },\n  data: function data() {\n    return {\n      list: [],\n      listLoading: true,\n      search: {\n        ipOrUrl: '',\n        keyword: ''\n      },\n      //分页所需字段\n      pageSize: 10,\n      total: 0,\n      currentPage: 1,\n      downloading: false\n    };\n  },\n  created: function created() {\n    this.listLoading = false;\n    this.getAll();\n  },\n  methods: {\n    queryCustomize: function queryCustomize() {\n      var _this = this;\n\n      this.listLoading = true;\n      this.$http.get('/assets-vulns/keywords', (0, _objectSpread2.default)({\n        page: this.currentPage - 1,\n        size: this.pageSize\n      }, this.search)).then(function (response) {\n        // this.list = this.groupByAssets(response.content)\n        _this.list = response.content;\n        _this.total = response.totalElements;\n        _this.listLoading = false;\n      });\n    },\n    downloadHandleClick: function downloadHandleClick() {\n      this.downloadLoading = true;\n      var header = ['vulnsName', 'vulnsState', 'vulnSystemName', 'vulnsCreatePerson', 'vulnsCreateTime', 'vulnsDescription', 'vulnsRand', 'assets', 'assetsUrl', 'assetsIp', 'attributes', 'belongedDepartment', 'mainTenanceContactPerson', 'maintenanceDepartment', 'safetyContactPerson', 'safetyDepartment'];\n      var chineseHeader = ['漏洞名', '漏洞状态', '系统名', '创建人', '创建时间', '漏洞描述', '漏洞等级', '对应资产id', '对应资产url', '对应资产ip', '资产属性', '所属部门', '主要人员', '主要部门', '安全人员', '安全部门']; //将his.list中每一个assets的漏洞字段进行遍历，添加上资产信息 并按照表头顺序排好赋给tabledata\n\n      var tabledata = this.formatJson(header, this.list.flatMap(function (v) {\n        //flatmap函数用于遍历this.list数组 v是数组中每一个assets\n        v.vulns.forEach(function (m) {\n          //该循环将每一条资产的漏洞字段进行遍历\n          m.assets = v.id; //取出当前资产的id 给现在循环的漏洞list的当前元素m 添加新字段assets 最后把每一条资产信息转换成以漏洞信息为主返回给v\n\n          m.assetsUrl = v.assetsUrl;\n          m.assetsIp = v.assetsIp;\n          m.attributes = v.attributes;\n          m.belongedDepartment = v.belongedDepartment;\n          m.mainTenanceContactPerson = v.mainTenanceContactPerson;\n          m.maintenanceDepartment = v.maintenanceDepartment;\n          m.safetyContactPerson = v.safetyContactPerson;\n          m.safetyDepartment = v.safetyDepartment;\n          return m;\n        });\n        return v.vulns; //\n      }));\n      (0, _export2excel.export_json_to_excel)({\n        //data和header组成对象传给调用组件\n        data: tabledata,\n        header: chineseHeader\n      });\n      this.downloadLoading = false;\n    },\n    //按照表头的顺序排好各行 赋值给tabledata\n    formatJson: function formatJson(filterVal, jsonData) {\n      //map遍历返回数据\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          //j是表头\n          return v[j]; //遍历当前行的各列\n        });\n      });\n    },\n    getAll: function getAll() {\n      var _this2 = this;\n\n      this.listLoading = true; //$http是全局Vue对象 用this代表，this.$http.get表示使用http对象的get方法\n\n      this.$http.get('/assets-vulns/all', {\n        page: this.currentPage - 1,\n        size: this.pageSize\n      }).then(function (response) {\n        //表格的数据\n        _this2.list = response.content; //总共的个数，主要用于分页\n\n        _this2.total = response.totalElements; //加载动画\n\n        _this2.listLoading = false;\n      });\n    }\n  }\n};\nexports.default = _default;",null]}