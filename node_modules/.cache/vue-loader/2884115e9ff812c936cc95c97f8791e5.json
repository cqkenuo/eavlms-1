{"remainingRequest":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0毕设相关\\EAvLMS\\src\\views\\tree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\0毕设相关\\EAvLMS\\src\\views\\tree\\index.vue","mtime":1590759458746},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { export_json_to_excel } from '@/utils/export2excel'\n//导入抽离的漏洞状态转化\nimport { vulnsState, vulnsRand, vulnsStateText } from '@/utils/vulns-info'\n\nexport default {\n  filters: {\n    vulnsState,\n    vulnsRand,\n    vulnsStateText\n  },\n  data() {\n    return {\n      list: [],\n      listLoading: true,\n      search: {\n        ipOrUrl: '',\n        keyword: ''\n      },\n      //分页所需字段\n      pageSize: 10,\n      total: 0,\n      currentPage: 1,\n      downloading: false\n    }\n  },\n  created() {\n    this.listLoading = false\n    this.getAll()\n  },\n  methods: {\n    queryCustomize() {\n      this.listLoading = true\n      this.$http.get('/assets-vulns/keywords', {\n        page: this.currentPage - 1,\n        size: this.pageSize,\n        ...this.search\n      }).then(response => {\n        // this.list = this.groupByAssets(response.content)\n        this.list = response.content\n        this.total = response.totalElements\n        this.listLoading = false\n        })\n    },\n    downloadHandleClick() {\n      this.downloadLoading = true\n      let header = [\n        'vulnsName',\n        'vulnsState',\n        'vulnSystemName',\n        'vulnsCreatePerson',\n        'vulnsCreateTime',\n        'vulnsDescription',\n        'vulnsRand',\n        'assets',\n        'assetsUrl',\n        'assetsIp',\n        'attributes',\n        'belongedDepartment',\n        'mainTenanceContactPerson',\n        'maintenanceDepartment',\n        'safetyContactPerson',\n        'safetyDepartment'\n      ]\n\n      let chineseHeader = [\n        '漏洞名',\n        '漏洞状态',\n        '系统名',\n        '创建人',\n        '创建时间',\n        '漏洞描述',\n        '漏洞等级',\n        '对应资产id',\n        '对应资产url',\n        '对应资产ip',\n        '资产属性',\n        '所属部门',\n        '主要人员',\n        '主要部门',\n        '安全人员',\n        '安全部门'\n      ]\n      //将his.list中每一个assets的漏洞字段进行遍历，添加上资产信息 并按照表头顺序排好赋给tabledata\n      let tabledata = this.formatJson(header, this.list.flatMap(v => {  //flatmap函数用于遍历this.list数组 v是数组中每一个assets\n        v.vulns.forEach(m => { //该循环将每一条资产的漏洞字段进行遍历\n          m.assets = v.id  //取出当前资产的id 给现在循环的漏洞list的当前元素m 添加新字段assets 最后把每一条资产信息转换成以漏洞信息为主返回给v\n          m.assetsUrl = v.assetsUrl\n          m.assetsIp = v.assetsIp\n          m.attributes = v.attributes\n          m.belongedDepartment = v.belongedDepartment\n          m.mainTenanceContactPerson = v.mainTenanceContactPerson\n          m.maintenanceDepartment = v.maintenanceDepartment\n          m.safetyContactPerson = v.safetyContactPerson\n          m.safetyDepartment = v.safetyDepartment\n          return m\n        })\n        return v.vulns  //\n      }))\n      export_json_to_excel({  //data和header组成对象传给调用组件\n        data: tabledata,\n        header: chineseHeader\n      })\n      this.downloadLoading = false\n    },\n\n    //按照表头的顺序排好各行 赋值给tabledata\n    formatJson(filterVal, jsonData) { //map遍历返回数据\n      return jsonData.map(v => filterVal.map(j => {  //j是表头\n        return v[j]  //遍历当前行的各列\n      }))\n    },\n    getAll() {\n      this.listLoading = true\n      //$http是全局Vue对象 用this代表，this.$http.get表示使用http对象的get方法\n      this.$http.get('/assets-vulns/all', {\n        page: this.currentPage - 1,\n        size: this.pageSize\n      }).then(response => {\n        //表格的数据\n        this.list = response.content\n        //总共的个数，主要用于分页\n        this.total = response.totalElements\n        //加载动画\n        this.listLoading = false\n      })\n    },\n\n\n  }\n}\n",null]}