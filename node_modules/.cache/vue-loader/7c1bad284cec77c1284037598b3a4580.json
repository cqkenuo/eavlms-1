{"remainingRequest":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0毕设相关\\EAvLMS\\src\\views\\table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\0毕设相关\\EAvLMS\\src\\views\\table\\index.vue","mtime":1590399120505},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport url from '../../utils/remote-url'\nimport { export_json_to_excel, formatJson } from '@/utils/export2excel'\n\nexport default {\n  filters: {\n    ellipsis(value) {\n      if (!value) return ''\n      if (value.length > 30) {\n        return value.slice(0, 30) + '...'\n      }\n      return value\n    }\n  },\n  data() {\n    return {  //返回给当前组件数据 固定写法\n      list: [],\n      listLoading: true,\n      //{key:value}格式赋值\n      search: {\n        cveid: '',\n        description: ''\n      },\n      dialogTableVisible: false,\n      //设置中间的dialogTableData参数接收scope数据，然后再从dialogTableData里提取分条数据\n      dialogTableData: {},  //对象\n      updateDialogVisible: false,\n\n      updateForm: {\n        cveid: '',\n        author: '',\n        description: '',\n        reference: '',\n        updatetime: ''\n      },\n      pageSize: 10,\n      total: 0,\n      currentPage: 1\n    }\n  },\n  created: function() {\n    this.getAll()\n    // this.listLoading = false\n    //\n    // // get方法的传参格式，类似于page=0&size=10\n    // const urlSearchParams = new URLSearchParams({\n    //   page: 0,\n    //   size: 10\n    // })\n\n\n    // // 发起异步请求\n    // fetch(url + '/cves/all?' + urlSearchParams.toString(), {\n    //   method: 'GET'\n    // })\n    //   // 请求返回json格式\n    //   .then(response => response.json())\n    //   // 真正服务器返回的数据，对响应的所有数据操作均在此函数内\n    //   .then(response => {\n    //     this.list = response.content\n    //   })\n  },\n  methods: {\n    getAll() {\n      this.listLoading = true\n      this.$http.get('/cves/all', {\n        page: this.currentPage-1,  //vue页码从1开始 后台从0开始 故-1\n        size: this.pageSize\n      }).then(response => {\n        this.list = response.content  //page里的content字段，保存的是cves的list集合\n        this.total = response.totalElements  //查回来的记录条总数\n        this.listLoading = false\n      })\n    },\n    deleteHandleClick(row) {\n      console.log('row', row)\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.delete('/cves', {\n          cveid: row.cveid\n        }).then(response => {\n          console.log('response')\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n          this.getAll()\n        }).catch(res => {\n          this.getAll(response => {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            })\n            this.getAll()\n          })\n        })\n      }).catch(() => {\n        // this.$message({\n        //   type: 'info',\n        //   message: '已取消删除'\n        // })\n      })\n    },\n    addHandleClick() {\n      this.updateForm = {}\n      this.updateDialogVisible = true\n    },\n    updateHandleClick(row) {\n      this.updateDialogVisible = true\n      this.updateForm = row\n    },\n    updateSubmit() {\n      this.updateDialogVisible = false\n      this.$http.post('/cves', {\n        ...this.updateForm\n      }).then(res => {\n        this.$message({\n          type: 'success',\n          message: '修改成功!'\n        })\n        this.getAll()\n      })\n    },\n    downloadHandleClick() {\n      let header = [\n        'cveid',\n        'author',\n        'description',\n        'reference',\n        'updatetime'\n      ]\n\n      let chineseHeader = [\n        'Id',\n        '更新人员',\n        '漏洞描述',\n        '参考资料',\n        '更新时间'\n      ]\n      let tabledata = this.formatJson(header, this.list)\n      export_json_to_excel({  //导出excel\n        data: tabledata,\n        header: chineseHeader\n      })\n    },\n    //按照表头的顺序排好各行 赋值给tabledata\n    formatJson(filterVal, jsonData) {  //定下header表头 向内填数据 格式化数据  两个数组遍历\n      return jsonData.map(v => filterVal.map(j => {  //j是表头\n        console.log('j', j)\n        console.log('j', v[j])\n        return v[j]  //遍历当前行的各列\n      }))\n    },\n    //查询按钮绑定的查询函数\n    queryCves(event) {\n      let urlSearchParams = new URLSearchParams({\n        page: 0,\n        size: 10,\n        //...表示解构赋值，即相当于把search里面的字段和值全拿出来放在这\n        //* cveid: '',\n        // * description: ''\n        ...this.search //this表示这个vue组件，search是上方data函数定义的\n        //发起查询请求\n      })\n      fetch(url + '/cves?' + urlSearchParams.toString(), {\n        method: 'GET'       //url=/cves?page=0&size=10&cveid=xxx&description=xxx\n      })\n        // 请求返回json格式\n        .then(response => response.json())\n        // 真正服务器返回的数据，对响应的所有数据操作均在此函数内\n        .then(response => {\n          this.list = response.content\n        })\n    }\n  }\n}\n",null]}