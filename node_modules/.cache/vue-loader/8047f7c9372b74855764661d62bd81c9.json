{"remainingRequest":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\0毕设相关\\EAvLMS\\src\\views\\nested\\enterpriseManager\\toCoder\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\0毕设相关\\EAvLMS\\src\\views\\nested\\enterpriseManager\\toCoder\\index.vue","mtime":1590559180495},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\0毕设相关\\EAvLMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TypeUserDialog from '@/components/user-type-dialog'\nimport { vulnsState, vulnsRand, vulnsStateText } from '@/utils/vulns-info'\nexport default {\n  filters: {\n    vulnsRand\n  },\n  components: {\n    TypeUserDialog\n  },\n  data() {\n    return {\n      list: [],\n      listLoading: true,\n      pageSize: 10,\n      total: 0,\n      currentPage: 1,\n      userDialogVisible: false,\n      userSelection: null,\n      vulnsSelection: null\n    }\n  },\n  created() {\n    //生命周期函数 周期开始就自动调用\n    this.getAll()\n  },\n\n  methods: {\n    //获取所有\n    getAll() {\n      this.listLoading = true\n      this.$http.get('/assets-vulns', {\n        //状态为0待修复的\n        vulnsState: 0,\n        page: this.currentPage - 1,\n        size: this.pageSize\n      }).then(response => {\n        this.list = response.content   //后端传递的page分页 content是分页的内容\n        console.log('getAll',this.list)\n        this.total = response.totalElements   //页码数\n        this.listLoading = false\n      })\n    },\n    //下发给开发人员\n    userHandleSubmit(user) {\n      if (user) {  //判断是否传入\n        let formUser = JSON.parse(sessionStorage.getItem('user'))  //json.parse() 将当前用户的session中的字符串转换为对象然后赋给enterprise参数formuser；从对象到json字符串的方法是json.stringify\n        this.$http.post('/to-coder', {     //封装后台的tocoder对象\n          coder: {   //将user的id赋给tocoder对象的coder属性\n            id: user.id\n          },\n          enterprise: {\n            id: formUser.id\n          },\n          date: new Date(),\n          vulns: {\n            id: this.vulnsSelection.id\n          }\n        }).then(v => {\n          this.userDialogVisible = false\n          this.getAll()\n        })\n      } else {\n        this.userDialogVisible = true\n      }\n    },\n\n    userHandleCancel() {\n      this.userSelection = null\n      this.userDialogVisible = false\n    },\n    coderHandleClick(row) {\n      console.log('vulnsSelection', row);\n      this.vulnsSelection = {id: row.id}\n      this.userDialogVisible = true\n    },\n    //误报\n    misreportHandleClick(row) {\n      console.log('misreportHandleClick', row)\n      this.$http.post('/assets-vulns/updateState', {\n        id: row.id,\n        vulnsState: 4,\n        'createUser.id':JSON.parse(sessionStorage.getItem('user')).id //给user子对象的id属性赋值\n      }).then(v => {\n        this.getAll()\n      })\n    },\n  }\n}\n",null]}